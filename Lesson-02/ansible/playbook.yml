---
- hosts: "all" # применяем команды ко всем хостам из inventory
  become: true # становимся привилегированным пользователем
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks: # список тасков

  - name: "Install pip via apt" # имя, обязательно для любой таски из плейбука, должно содержать описание того что эта таска делает
    ansible.builtin.apt: # имя модуля, этот модуль устанавливает софт на хосте с помощью пакета apt
      name: "python3-pip" # имя пакета для установки
      state: "latest" # установить последнюю версию пакета, в отличие от present, если пакет уже установлен в системе, попробует его обновить
      update_cache: true # вызвать apt update перед установкой, чтобы убедиться в наличии самой свежей базы данных о пакетах

  - name: "Install venv via apt" # имя, обязательно для любой таски из плейбука, должно содержать описание того что эта таска делает
    ansible.builtin.apt: # имя модуля, этот модуль устанавливает софт на хосте с помощью пакета apt
      name: "virtualenv" # имя пакета для установки
      state: "latest" # установить последнюю версию пакета, в отличие от present, если пакет уже установлен в системе, попробует его обновить
      update_cache: true # вызвать apt update перед установкой, чтобы убедиться в наличии самой свежей базы данных о пакетах

  - name: "Delete /home/vagrant/project folder"
    ansible.builtin.file: # этот модуль работает с файлами и папками на удаленной машине
      path: "/home/vagrant/project" # путь к файлу/папке на удаленной машине
      state: "absent" # перевести папку в состояние absent - то есть удалить ее

  - name: "Copy our flask app"
    ansible.builtin.copy: # этот модуль копирует файлы/директории с контрольной ноды на хосты
      src: "../flask" # путь к файлу/директории для копирования на контрольной ноде
      dest: "/home/vagrant/project/" # путь для вставки на удаленной машине, вставка папок ВСЕГДА будет осуществляться внутрь папки, ансибл никогда не будет подменять папки или переименовывать их
      owner: "vagrant" # пользователь владелец файла/директории на удаленной машине
      group: "vagrant" # группа владелец файла/директории на удаленной машине
      mode: "0644" # права доступа к файлу/директории

  - name: "Install requirements"
    pip:
      requirements: "/home/vagrant/project/flask/requirements.txt"
      virtualenv: "/home/vagrant/project/flask/venv"
      virtualenv_python: "python3.7"

  - name: Install Flask in the virtualenv
    pip:
      executable: pip3
      name: flask
      state: latest
#  - name: "start app"
#    shell: "python3 /home/vagrant/project/flask/app.py &"

#  - name: "start flask"
#    environment:
#      FLASK_APP: "/home/vagrant/project/flask/app.py"
#    shell: "flask run"

  - name: "Launch flask website via virtualenv"
    shell: "source /home/vagrant/project/flask//venv/bin/activate; nohup python3 /home/vagrant/project/flask/app.py >log.txt 2>&1 &"
